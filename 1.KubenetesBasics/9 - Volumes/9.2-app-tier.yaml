apiVersion: v1
kind: Service
metadata:
  name: data-tier
  labels:
    app: microservices
spec:
  ports:
    - port:  6379
      protocol: TCP
      name:  redis
  selector:
    tier: data
    type: ClusterIP
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-tier-volume
spec:
  capacity:
    storage: 1Gi # 1 Gigabyte
  accessModes:
    - ReadWriteOnce
  awsElasticBlockStore:
    volumeId: INSERT_VOLUME_ID # e.g. vol-0e3f1f2f3f4f5f6f7


---
piVersion: v1
kind: PersistenceVolumeClaim
metadata:
  name: data-tier-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 128Mi # 128 Megabytes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-tier
  labels:
    app: microservices
    tier: data
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: data
  template:
    metadata:
      labels:
        app: microservices
        tier: data
    spec:
      containers:
      - name: redis
        image: redis:latest
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 6379

        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          
        livenessProbe:
          exec:
            command:
              - redis-cli
              - ping
          initialDelaySeconds: 30
        volumeMounts:
          - mountPath: /data
            name: data-tier-volume

      volumes:
        - name:  data-tier-volume
          persistentVolumeClaim:
            claimName:  data-tier-volume-claim